#+OPTIONS: tex:t num:nil toc:nil
* Ace2 Interface Program

** Refactoring



*** Imaging
Module for handling different image grabbing routines
- HW trigger sequence
- "video" stream image mode (alignment)
- hot pixel detect/update
Could also include general camera config method, then specific versions for each subroutine...


*** App
- app wrappers
- gui.py


** Image Calculation
optical depth?

#+begin_example
if ( (shallow < dark) || ( (light - dark) < (shallow - dark) )):
    img=1
else:
   round(1000.0 * log((light-dark)/(shallow-dark))).astype(uint16)
#+end_example

** Notes

Use pixel format Mono12p:

# Set the pixel format to Mono 12
camera.PixelFormat.Value = "Mono12p"

packed pixels allow for desired exposure time, unpacked forced to 12000us


Use 10 ms exposure time, 3 consecutive imgs (for testing), then,
img math and display result (maybe 3 calc imgs, too)

- TrigSeq class for storing/processing images?

*** Links:
- [[https://docs.baslerweb.com/a2a1920-160umbas][ace2 documentation]]
- [[https://www.baslerweb.com/en-us/shop/a2a1920-160umbas/][ace2 product page]]
- [[https://github.com/basler/pypylon][pypylon]]
- [[https://docs.baslerweb.com/pylonapi/cpp/][pylon API]]
- [[https://github.com/basler/pypylon-samples/blob/main/notebooks/USB_hardware_trigger_and_chunks.ipynb][USB hardware trigger example]]
